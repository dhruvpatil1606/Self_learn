--> Binary Tree Implementation in C++ <--

-> This project implements a general binary tree data structure in C++ with basic operations such as insertion, updating, deletion, and traversal. The program provides an interactive menu-driven interface to manage the binary tree and display its contents using various traversal methods.

--> Features

1. Node Insertion: Add nodes to the binary tree by specifying a parent node and the side (left or right). Duplicate data is not allowed.
2. Node Update: Update the data of an existing node.
3. Node Deletion: Delete a node, handling cases for leaf nodes, nodes with one child, and nodes with two children.

--> Traversal Methods:

1. In-order traversal (Left, Root, Right)
2. Pre-order traversal (Root, Left, Right)
3. Post-order traversal (Left, Right, Root)
4. Level-order traversal (using a queue)

--> Interactive Interface: Menu-driven program for easy interaction.

--> Limitations

1. No duplicate data is allowed in the tree.
2. The program does not persist the tree structure after exiting.
3. Error handling is minimal (e.g., invalid input may cause unexpected behavior).

--> Future Improvements

1. Add input validation for robustness.
2. Support saving/loading the tree from a file.
3. Add visualization of the tree structure.